version: "3.8"

services:
  redis:
    image: redis:7.0-alpine
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    volumes:
      - redis_vlm:/data
    networks:
      - backend_nt
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  database:
    image: postgres:15.1-alpine
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
    networks:
      - backend_nt
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 1s
      timeout: 3s
      retries: 30

  backend:
    build: .
    restart: on-failure
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      PRISMA_STUDIO_PORT: ${PRISMA_STUDIO_PORT}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_USERNAME: ${REDIS_USERNAME}
      FRONTEND_URL: ${FRONTEND_URL}
      FRONTEND_PORT: ${FRONTEND_PORT}
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend_nt
    healthcheck:
      test: curl -s -f http://localhost:${BACKEND_PORT}/health
      interval: 2s
      timeout: 30s
      retries: 30

networks:
  backend_nt:

volumes:
  redis_vlm:
